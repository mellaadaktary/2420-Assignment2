#!/bin/bash


#This script is used to run the other two scripts in this directory


#EUID is effective user id and changes to the root users when sudo is run. if the command is run without sudo the uid which is not equal to 0 then echo error and exit 1
#https://stackoverflow.com/questions/18215973/how-to-check-if-running-as-root-in-a-bash-script
#https://superuser.com/questions/1696909/what-is-the-meaning-of-using-euidif-ruid-and-euid-of-a-process-is-1000-0-and-i
if [[ "$EUID" -ne 0 ]]; then
	echo "Error: run the script with sudo"
	exit1
fi
#https://kodekloud.com/blog/bash-getopts/
#while loop using getopts, getopts is a shell commands used to parse command line options and arguments, the "im:" means those are the flags which will be available to run and the colon after the m indicates that an argument is expected after the flag. the opt is a variable that the option gets assigned to
while getopts "im:" opt; do
	#this is a case statement which matches the opt to the options below
	case "${opt}" in
#This is the flag -i and when this flag is called then the install-Userdef-script will run the ./ represents the script in the same directory as the two other scripts should not be in a different directory
	i)
		./install-Userdef-script
		#these double ;; mark the end of where this flag ends
		;;
# this is the -m flag when this flag is called we store the argument which is required for this script in user as it should be theusername which is rquired to run the symlink script
	m)
	#defining the user up there to the optarg here
		user=${OPTARG}
		#running the script with the argument it requires
		./make-symlink-script $user
		;;
# this is a case statement match that runs when a flag that expects an argument is run without one then this will run and exit 1 which means the script will stop and terminate
	:)
		echo "Error: run -m with an argument"
		exit 1
		;;
# this is a placeholder for any other single letter so if a flag which isnt an option here runs here then this option will run and the script will terminate
	?)
		echo "Error: that flag does not exist"
		exit 1
		;;
	esac
done
