#!/bin/bash

#this script takes the file Userdef-packages and installs all the packages listed inside of it and if the package is already installed then it will tell the user 

#empty array named package
package=()

#command substitution which gives us the content of Userdef-packages and stores it into readthefile, the . indicted that the Userdef-packages should not be outside the current directory
readthefile=$(cat ./Userdef-packages)

#adds the readthefile to the empty array so we can loop through it. https://ioflood.com/blog/bash-append-to-array/
package+=$readthefile


#this for loop, loops through package which holds all the packages to be installed, we iterate through it with the @ inside the square brackets then ask it to do something for us
for i in ${package[@]}; do

	#pacman -Q is a command which shows us the installed packages. we pipe it into a grep and pull out the keyword which is the iterate in this case, this is all in a command substitution which gives us result and if it returns something then the double sqaure brackets will either return true or false. If it returns True then the echo will run telling the user that the package is already installed https://www.atlantic.net/dedicated-server-hosting/list-installed-packages-with-pacman-on-arch-linux/
	if [[ $(pacman -Q | grep $i) ]]; then
		echo "$i is already installed"

	#otherwise install the package
	else
		# install the package
		pacman -S $i
	fi
done


