#!/bin/bash


if [[ "$EUID" -ne 0 ]]; then
	echo "Error: run script with sudo"
	exit1
fi


highestuserid=$(awk --field-separator ":" '{print $3}' /etc/passwd | sort -nr | grep -E '\b[0-9]{4}\b' | head -n 1)

newUid=$(($highestuserid + 1))
newGuid=$newUid
name=""
specifiedshell="/bin/bash"

while getopts "u:g:s:" opt; do
	case "${opt}" in
	u)
		name=${OPTARG}
		;;
	g)
		groups=( ${OPTARG} )
		;;

	s)
		specifiedshell=${OPTARG}
		echo "$specifiedshell"
		;;
		
	:)
		echo "Error:this flag requires an argument"
		exit 1
		;;
	?)
		echo "Error: this option does not exist"
		exit 1
		;;
	esac
done

if [[ -n $name && -n $specifiedshell ]]; then
	
	echo "$name:x:$newUid:$newGuid:$name:/home/$name:$specifiedshell" >> /etc/passwd
	echo "$name:x:$newGuid:" >> /etc/group
	mkdir -p /home/$name
	cp -r /etc/skel/. /home/$name
	chown $name:$name /home/$name
	echo "$name:!*:::::::" >> /etc/shadow

	for i in ${groups[@]}; do
		groupline=$(cat /etc/group | grep -w "$i:x")
		command=$(cat /etc/group | grep -w "$i:x" | awk -F'[ :]' '{print $4}')
		if [[ $command ]]; then
			newline=$(sed "s/$/,${name}/" <<< $groupline)
			sed -i "s/${groupline}/${newline}/g" /etc/group
		else
			nofirstuser=$(sed "s/$/${name}/" <<< $groupline)
			sed -i "s/${groupline}/${nofirstuser}/g" /etc/group
		fi
	done	
passwd $name
fi








